{"version":3,"sources":["componants/MyCar/MyCar.module.css","componants/Menu/Menu.module.css","pages/app/App.module.css","image/cactus.png","image/speechBubble.png","image/me.gif","image/tumbleweed.png","componants/Cloud/Cloud.module.css","image/blurCac.png","image/cloud.png","componants/MyCar/MyCar.jsx","componants/Cloud/Cloud.jsx","componants/Menu/Menu.jsx","pages/app/App.js","serviceWorker.js","index.js"],"names":["module","exports","MyCar","props","className","styles","myCarImg_div","carImage_div","src","myCar","carImage","tumbleweedImage_div_container","tumbleweedImage_div","tumbleweed","tumbleweedImage","Cloud","cloudImg_container","Menu","setTimeout","document","getElementById","style","opacity","display","speech_container_div","speech_div","hi_div","id","speechBubble_Hi_p","navBar_div","App","page_container_div","mountainImg_container","Cactus","cactusImage","BlurCactus","blurCactusImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,aAAe,4BAA4B,aAAe,4BAA4B,UAAY,yBAAyB,SAAW,wBAAwB,YAAc,2BAA2B,8BAAgC,6CAA6C,MAAQ,qBAAqB,oBAAsB,mCAAmC,OAAS,sBAAsB,gBAAkB,+BAA+B,SAAW,0B,gBCAvdD,EAAOC,QAAU,CAAC,qBAAuB,mCAAmC,WAAa,yBAAyB,OAAS,qBAAqB,kBAAoB,gCAAgC,OAAS,qBAAqB,cAAc,0BAA0B,WAAa,2B,gBCAvRD,EAAOC,QAAU,CAAC,mBAAqB,gCAAgC,YAAc,yBAAyB,MAAQ,mBAAmB,gBAAkB,6BAA6B,sBAAwB,mCAAmC,QAAU,qBAAqB,iBAAmB,gC,gBCDrSD,EAAOC,QAAU,IAA0B,oC,iBCA3CD,EAAOC,QAAU,IAA0B,0C,iBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCC3CD,EAAOC,QAAU,CAAC,mBAAqB,kCAAkC,QAAU,yB,gBCDnFD,EAAOC,QAAU,IAA0B,qC,uECA3CD,EAAOC,QAAU,IAA0B,mC,gJCwB5BC,EAhBD,SAAAC,GAEV,OACI,yBAAKC,UAAWC,IAAOC,cACnB,yBAAKF,UAAWC,IAAOE,cACnB,yBAAKC,IAAKC,IAAOL,UAAWC,IAAOK,YAEvC,yBAAKN,UAAWC,IAAOM,+BACnB,yBAAKP,UAAWC,IAAOO,qBACnB,yBAAKJ,IAAKK,IAAYT,UAAWC,IAAOS,sB,iBCJ7CC,G,MATD,SAAAZ,GAEV,OACI,yBAAKC,UAAWC,IAAOW,uB,gBC4BhBC,G,KA9BF,SAAAd,GAUT,OARCe,YAAW,WACRC,SAASC,eAAe,MAAMC,MAAMC,QAAU,IAC7CJ,YAAW,WACRC,SAASC,eAAe,MAAMC,MAAME,QAAU,OAC9CJ,SAASC,eAAe,UAAUC,MAAMC,QAAU,MACnD,OACF,KAGD,yBAAKlB,UAAWC,IAAOmB,sBACnB,yBAAKpB,UAAWC,IAAOoB,YACnB,yBAAKrB,UAAWC,IAAOqB,OAAQC,GAAG,MAC9B,uBAAGvB,UAAWC,IAAOuB,mBAArB,qEAEJ,yBAAKxB,UAAWC,IAAOwB,WAAYF,GAAG,UAClC,oCACA,mCACA,uCACA,mCACA,sCACA,mCACA,2C,iCCLLG,MAbf,WACE,OACI,yBAAK1B,UAAWC,IAAO0B,oBACnB,kBAAC,EAAD,MACA,yBAAK3B,UAAWC,IAAO2B,wBACvB,yBAAKxB,IAAKyB,IAAQ7B,UAAWC,IAAO6B,cACpC,yBAAK1B,IAAK2B,IAAY/B,UAAWC,IAAO+B,kBACxC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCNUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzB,SAASC,eAAe,SDyHpB,kBAAmByB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9d4f08e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myCarImg_div\":\"MyCar_myCarImg_div__2hxPD\",\"carImage_div\":\"MyCar_carImage_div__3TMz3\",\"carUpDown\":\"MyCar_carUpDown__2Mvos\",\"carImage\":\"MyCar_carImage__2PbGC\",\"carbackFort\":\"MyCar_carbackFort__15PLy\",\"tumbleweedImage_div_container\":\"MyCar_tumbleweedImage_div_container__1Ec-S\",\"slide\":\"MyCar_slide__3l2qq\",\"tumbleweedImage_div\":\"MyCar_tumbleweedImage_div__2ghTE\",\"upDown\":\"MyCar_upDown__3skft\",\"tumbleweedImage\":\"MyCar_tumbleweedImage__3Q9cx\",\"rotation\":\"MyCar_rotation__nxa04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speech_container_div\":\"Menu_speech_container_div__Pld-m\",\"speech_div\":\"Menu_speech_div__3B1VV\",\"hi_div\":\"Menu_hi_div__2EO2x\",\"speechBubble_Hi_p\":\"Menu_speechBubble_Hi_p__3BpTd\",\"typing\":\"Menu_typing__3ljOR\",\"blink-caret\":\"Menu_blink-caret__2kPHr\",\"navBar_div\":\"Menu_navBar_div__293tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_container_div\":\"App_page_container_div__2xy0h\",\"cactusImage\":\"App_cactusImage__2WiJ1\",\"slide\":\"App_slide__Xzk1y\",\"blurCactusImage\":\"App_blurCactusImage__1_560\",\"mountainImg_container\":\"App_mountainImg_container__T79lJ\",\"animate\":\"App_animate__2ps0_\",\"speechBubble_img\":\"App_speechBubble_img__3Jxsm\"};","module.exports = __webpack_public_path__ + \"static/media/cactus.aa51daa8.png\";","module.exports = __webpack_public_path__ + \"static/media/speechBubble.2672b97c.png\";","module.exports = __webpack_public_path__ + \"static/media/me.49aaf4c7.gif\";","module.exports = __webpack_public_path__ + \"static/media/tumbleweed.bb035bf8.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloudImg_container\":\"Cloud_cloudImg_container__36HpV\",\"animate\":\"Cloud_animate__2aoTQ\"};","module.exports = __webpack_public_path__ + \"static/media/blurCac.4bd153ab.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud.df55bbad.png\";","import React from 'react';\nimport styles from './MyCar.module.css';\nimport myCar from '../../image/me.gif'\nimport tumbleweed from '../../image/tumbleweed.png';\n\nimport Cactus from '../../image/cactus.png';\n\n\nconst MyCar = props =>{\n    \n    return (\n        <div className={styles.myCarImg_div}>\n            <div className={styles.carImage_div}>\n                <img src={myCar} className={styles.carImage}/>\n            </div>\n            <div className={styles.tumbleweedImage_div_container}>\n                <div className={styles.tumbleweedImage_div}>\n                    <img src={tumbleweed} className={styles.tumbleweedImage}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyCar;","import React from 'react';\nimport styles from './Cloud.module.css';\nimport CloudImg from '../../image/cloud.png'\n\nconst Cloud = props =>{\n    \n    return (\n        <div className={styles.cloudImg_container}>\n            \n        </div>\n    )\n}\n\nexport default Cloud;","import React, { useState, useEffect } from 'react';\nimport styles from './Menu.module.css';\nimport SpeechBubble from '../../image/speechBubble.png';\n\n\nconst Menu = props =>{\n\n    {setTimeout(function () {\n        document.getElementById(\"hi\").style.opacity = \"0\" \n        {setTimeout(function () {\n            document.getElementById(\"hi\").style.display = \"none\" \n            document.getElementById(\"navBar\").style.opacity = \"1\" \n        }, 500)}\n      }, 5000)}\n    \n    return (\n        <div className={styles.speech_container_div}>\n            <div className={styles.speech_div}>\n                <div className={styles.hi_div} id=\"hi\">\n                    <p className={styles.speechBubble_Hi_p}>Hey there, no time to stop but I'm sure we can have a good chat.</p>\n                </div>\n                <div className={styles.navBar_div} id=\"navBar\">\n                    <p>About</p>\n                    <span>|</span>\n                    <p>Projects</p>\n                    <span>|</span>\n                    <p>contact</p>\n                    <span>|</span>\n                    <p>Rresume</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Menu;","import React from 'react';\nimport MyCar from '../../componants/MyCar/MyCar';\nimport Cloud from '../../componants/Cloud/Cloud';\nimport Menu from '../../componants/Menu/Menu'\n\nimport styles from'./App.module.css';\nimport Cactus from '../../image/cactus.png';\nimport BlurCactus from '../../image/blurCac.png';\nimport SpeechBubble from '../../image/speechBubble.png';\n\nfunction App() {\n  return (\n      <div className={styles.page_container_div}>\n          <Cloud />\n          <div className={styles.mountainImg_container}></div>\n          <img src={Cactus} className={styles.cactusImage}/>\n          <img src={BlurCactus} className={styles.blurCactusImage}/>\n          <Menu />\n          <MyCar />\n      </ div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/pages/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}